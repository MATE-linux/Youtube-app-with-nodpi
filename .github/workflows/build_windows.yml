name: Build Windows with Nuitka

on:
  push:
    branches: [ main ]  # Триггер на пуш в main
  pull_request:         # Опционально
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest  # Сборка под Windows

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'  # Укажите нужную версию Python

      - name: Install Nuitka
        run: pip install --upgrade nuitka

      - name: Install additional dependencies (если нужны)
        run: |
          pip install pyqt5  # используется PyQt5
          pip install pyqtwebengine # pyqtwebengine используется
      - name: Verify Qt plugins
        run: |
          echo "Checking Qt plugins..."
          ls "$(python -c "import PyQt5.QtCore; print(PyQt5.QtCore.QLibraryInfo.location(PyQt5.QtCore.QLibraryInfo.PluginsPath))")"
      - name: Verify Qt installation
        run: |
          python -c "from PyQt5.QtWebEngineWidgets import QWebEngineView; print('QtWebEngine available')"
      - name: Get Python and Qt paths
        id: paths
        shell: bash
        run: |
          PYTHON_DIR=$(python -c "import sys; print(sys.prefix.replace('\\\\', '/'))"
          QT_PLUGINS_DIR=$(python -c "import PyQt5.QtCore; print(PyQt5.QtCore.QLibraryInfo.location(PyQt5.QtCore.QLibraryInfo.PluginsPath).replace('\\\\', '/'))"
          QT_TRANSLATIONS_DIR=$(python -c "import PyQt5.QtCore; print(PyQt5.QtCore.QLibraryInfo.location(PyQt5.QtCore.QLibraryInfo.TranslationsPath).replace('\\\\', '/'))"
          QT_DATA_DIR=$(python -c "import PyQt5.QtCore; print(PyQt5.QtCore.QLibraryInfo.location(PyQt5.QtCore.QLibraryInfo.DataPath).replace('\\\\', '/'))"
          echo "PYTHON_DIR=$PYTHON_DIR" >> $GITHUB_OUTPUT
          echo "QT_PLUGINS_DIR=$QT_PLUGINS_DIR" >> $GITHUB_OUTPUT
          echo "QT_TRANSLATIONS_DIR=$QT_TRANSLATIONS_DIR" >> $GITHUB_OUTPUT
          echo "QT_DATA_DIR=$QT_DATA_DIR" >> $GITHUB_OUTPUT
      - name: Test Nuitka
        run: nuitka --version
      - name: Compile with Nuitka (Standalone)
        shell: cmd
        run: python -m nuitka --standalone --onefile --windows-console-mode=disable --output-dir=dist --enable-plugin=pyqt5 --include-qt-plugins=all --include-data-dir=${{ steps.paths.outputs.QT_PLUGINS_DIR }}=PyQt5/Qt/plugins --windows-icon-from-ico=youunlock.ico --include-data-dir=${{ steps.paths.outputs.QT_TRANSLATIONS_DIR }}=PyQt5/Qt/translations --include-data-dir=${{ steps.paths.outputs.QT_DATA_DIR }}=PyQt5/Qt/resources unlock.py
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/