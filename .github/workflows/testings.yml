
name: Find QtWebEngineProcess

on: [push, workflow_dispatch]

jobs:
  locate-webengine:
    runs-on: windows-latest
    
    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        architecture: 'x64'

    - name: Install via official installer (fallback)
      shell: cmd
      run: |
        pip install --upgrade pip setuptools wheel
        pip uninstall -y PyQt5 PyQtWebEngine PyQt5-sip
         pip install PyQt5 PyQt5-Qt5 PyQtWebEngine

    - name: Find qtwebengineprocess.exe
      shell: pwsh
      run: |
        # Получаем путь через Python
        $pyCode = @"
        import sys
        sys.stdout.reconfigure(encoding='utf-8')
        
        from PyQt5.QtCore import QLibraryInfo
        import os
        
        try:
            # Основной способ
            bin_path = QLibraryInfo.location(QLibraryInfo.BinariesPath)
            webengine_path = os.path.join(bin_path, 'qtwebengineprocess.exe')
            print(f'BIN_PATH|{webengine_path}')
            print(f'EXISTS|{os.path.exists(webengine_path)}')
            
            # Альтернативный способ (если доступен)
            try:
                from PyQt5.QtWebEngineCore import QWebEngineProfile
                print(f'PROFILE_PATH|{QWebEngineProfile.defaultProfile().persistentStoragePath()}')
            except ImportError:
                print('PROFILE_PATH|Not available')
        except Exception as e:
            print(f'ERROR|{str(e)}')
        "@
        
        $output = python -c $pyCode
        
        # Парсим вывод
        $binPath = $output | Where-Object { $_ -match 'BIN_PATH\|' } | ForEach-Object { $_.Split('|')[1] }
        $exists = $output | Where-Object { $_ -match 'EXISTS\|' } | ForEach-Object { $_.Split('|')[1] }
        
        Write-Output "Основной путь: $binPath"
        Write-Output "Файл существует: $exists"
        
        # Проверяем существование файла
        if ($binPath -and (Test-Path $binPath)) {
            Write-Output "Файл найден:"
            Get-Item $binPath | Format-List *
        } else {
            Write-Output "Файл не найден по основному пути. Поиск в Python location..."
            $found = Get-ChildItem -Path $env:pythonLocation -Recurse -Filter "qtwebengineprocess.exe" -ErrorAction SilentlyContinue
            if ($found) {
                $found | Select-Object FullName, Length, LastWriteTime | Format-List
            } else {
                Write-Output "Файл не найден в системе!"
            }
        }
